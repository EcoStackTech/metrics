name: "EcoStack Runner Metrics"
description: "Send GitHub Actions runner/job metrics to your EcoStack API for monitoring and analytics"
author: "EcoStack"
branding: 
  icon: "activity" 
  color: "green"
inputs:
  api_url:
    description: "Metrics API endpoint (defaults to EcoStack's hosted API)"
    required: false
    default: "https://api.ecostack.tech/metric"
  include_system_stats:
    description: "Collect CPU/RAM/disk metrics and carbon footprint calculation"
    required: false
    default: "true"
  capture_pipeline_metrics:
    description: "Capture true pipeline duration and resource usage (recommended: true)"
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - name: Validate Configuration
      shell: bash
      run: |
        # Use default API URL if none provided
        if [[ -z "${{ inputs.api_url }}" ]]; then
          echo "Using default EcoStack API endpoint: https://api.ecostack.tech/metric"
        elif [[ ! "${{ inputs.api_url }}" =~ ^https:// ]]; then
          echo "Error: api_url must use HTTPS protocol" >&2
          exit 1
        fi
        
        if [[ "${{ inputs.include_system_stats }}" != "true" && "${{ inputs.include_system_stats }}" != "false" ]]; then
          echo "Error: include_system_stats must be 'true' or 'false'" >&2
          exit 1
        fi
        
        if [[ "${{ inputs.capture_pipeline_metrics }}" != "true" && "${{ inputs.capture_pipeline_metrics }}" != "false" ]]; then
          echo "Error: capture_pipeline_metrics must be 'true' or 'false'" >&2
          exit 1
        fi
        
        echo "Configuration validation passed"
    
    - name: Collect Metrics & Calculate Carbon Footprint
      shell: bash
      env:
        METRICS_API: ${{ inputs.api_url || 'https://api.ecostack.tech/metric' }}
        INCLUDE_SYSTEM: ${{ inputs.include_system_stats }}
        CAPTURE_PIPELINE: ${{ inputs.capture_pipeline_metrics }}
        REPO: ${{ github.repository }}
        RUN_ID: ${{ github.run_id }}
        RUN_ATTEMPT: ${{ github.run_attempt }}
        WORKFLOW: ${{ github.workflow }}
        JOB: ${{ github.job }}
        ACTOR: ${{ github.actor }}
        REF: ${{ github.ref }}
        SHA: ${{ github.sha }}
        RUNNER_NAME: ${{ runner.name }}
        RUNNER_OS: ${{ runner.os }}
        RUNNER_ARCH: ${{ runner.arch }}
        RUNNER_LABELS: ${{ runner.labels }}
        EVENT_NAME: ${{ github.event_name }}
        EVENT_ACTION: ${{ github.event.action }}
        BASE_REF: ${{ github.base_ref }}
        HEAD_REF: ${{ github.head_ref }}
        WORKSPACE: ${{ github.workspace }}
        # Enhanced context for better pipeline tracking
        EVENT_HEAD_COMMIT_TIMESTAMP: ${{ github.event.head_commit.timestamp }}
        EVENT_PULL_REQUEST_CREATED_AT: ${{ github.event.pull_request.created_at }}
        EVENT_PULL_REQUEST_UPDATED_AT: ${{ github.event.pull_request.updated_at }}
        EVENT_PUSH_BEFORE: ${{ github.event.before }}
        EVENT_PUSH_AFTER: ${{ github.event.after }}
        EVENT_ISSUE_CREATED_AT: ${{ github.event.issue.created_at }}
        EVENT_ISSUE_UPDATED_AT: ${{ github.event.issue.updated_at }}
        EVENT_RELEASE_CREATED_AT: ${{ github.event.release.created_at }}
        EVENT_RELEASE_PUBLISHED_AT: ${{ github.event.release.published_at }}
        EVENT_SCHEDULE: ${{ github.event.schedule }}
        EVENT_WORKFLOW_DISPATCH_INPUTS: ${{ toJSON(github.event.inputs) }}
      run: $GITHUB_ACTION_PATH/scripts/post.sh
