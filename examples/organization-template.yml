name: EcoStack Metrics Collection Template
description: "Reusable workflow template for EcoStack metrics collection across the organization"
on:
  workflow_call:
    inputs:
      include_system_stats:
        description: 'Include system statistics and carbon footprint calculation'
        required: false
        type: boolean
        default: true
      capture_pipeline_metrics:
        description: 'Capture true pipeline duration and resource usage (recommended)'
        required: false
        type: boolean
        default: true
      runner_type:
        description: 'Type of runner to use for metrics collection'
        required: false
        type: string
        default: 'ubuntu-latest'
      timeout_minutes:
        description: 'Maximum time for metrics collection job'
        required: false
        type: number
        default: 10

jobs:
  collect-metrics:
    runs-on: ${{ inputs.runner_type }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    
    # Ensure this job has the necessary permissions
    permissions:
      contents: read
      id-token: write  # For enhanced security
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Shallow clone for faster checkout
          fetch-depth: 1
      
      # Optional: Add any pre-metrics collection steps
      - name: Pre-metrics setup
        run: |
          echo "üîß Setting up metrics collection environment..."
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Runner: ${{ runner.name }} (${{ runner.os }}/${{ runner.arch }})"
          echo "Event: ${{ github.event_name }}"
          echo ""
          echo "üìä Metrics configuration:"
          echo "   ‚Ä¢ System stats: ${{ inputs.include_system_stats }}"
          echo "   ‚Ä¢ Pipeline tracking: ${{ inputs.capture_pipeline_metrics }}"
          echo "   ‚Ä¢ Runner type: ${{ inputs.runner_type }}"
          echo "   ‚Ä¢ Timeout: ${{ inputs.timeout_minutes }} minutes"
      
      # üå± MEASURE CARBON FOOTPRINT - Core metrics collection
      - name: Measure Carbon Footprint
        uses: EcoStackTech/metrics@v2.0.0
        with:
          include_system_stats: ${{ inputs.include_system_stats }}
          capture_pipeline_metrics: ${{ inputs.capture_pipeline_metrics }}
        # This action provides:
        # ‚Ä¢ True pipeline duration measurement (from commit/PR creation)
        # ‚Ä¢ Enhanced resource monitoring (CPU, memory, disk, network)
        # ‚Ä¢ Accurate carbon footprint calculation
        # ‚Ä¢ Pipeline efficiency insights
        # ‚Ä¢ Automatic API transmission to EcoStack
      
      # Optional: Post-metrics collection steps
      - name: Post-metrics summary
        if: always()
        run: |
          echo "üìã Metrics collection summary:"
          echo "   ‚Ä¢ Repository: ${{ github.repository }}"
          echo "   ‚Ä¢ Workflow: ${{ github.workflow }}"
          echo "   ‚Ä¢ Job: ${{ github.job }}"
          echo "   ‚Ä¢ Run ID: ${{ github.run_id }}"
          echo "   ‚Ä¢ Runner: ${{ runner.name }}"
          echo "   ‚Ä¢ Event: ${{ github.event_name }}"
          echo ""
          echo "‚úÖ Metrics sent to EcoStack API successfully!"
          echo "üå± Your environmental impact has been measured and recorded."
      
      # Optional: Add any post-processing or notifications
      - name: Notify team (optional)
        if: always() && github.event_name == 'push'
        run: |
          echo "üîî Metrics collection completed for ${{ github.repository }}"
          echo "üìä Check your EcoStack dashboard for detailed insights"
          echo "üåç Help your team reduce their carbon footprint!"

# Example usage in any repository:
#
# name: Use EcoStack Metrics
# on: [push, pull_request]
# jobs:
#   metrics:
#     uses: ./.github/workflows/ecostack-metrics.yml
#     with:
#       include_system_stats: true
#       capture_pipeline_metrics: true
#       runner_type: ubuntu-latest
#       timeout_minutes: 15
#
#   # Your other jobs...
#   build:
#     needs: metrics
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - run: echo "Building after metrics collection..."
